(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{403:function(s,a,t){"use strict";t.r(a);var n=t(54),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"docker-相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-相关"}},[s._v("#")]),s._v(" docker 相关")]),s._v(" "),t("h2",{attrs:{id:"docker-常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-常用命令"}},[s._v("#")]),s._v(" docker 常用命令")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker build -t image-name:tag "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用当前目录作为构建上下文build镜像，. 为上下文环境，可以使用 .dockerignore 文件忽略不需要发送给 docker 引擎的文件")]),s._v("\ndocker network create "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-d bridge"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" test-net "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建虚拟网络，用于多容器通信")]),s._v("\ndocker run -d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-it --rm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--network"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("host"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TZ")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Asia/Shanghai"')]),s._v(" -p 宿主机端口:容器端口 -v 宿主机绝对路径/volume-name:容器路径 --name 容器名称 --network 虚拟网络 --network-alias 虚拟网络别名 image-name:tag "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建容器")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#【镜像】")]),s._v("\ndocker images\ndocker pull image-name:tag\ndocker rmi image-id\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" image-id "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 逆向")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#【容器】")]),s._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" container-id\ndocker start container-id\ndocker stop container-id\n\ndocker volume "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 volume 列表")]),s._v("\ndocker network "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看网络列表")]),s._v("\n\ndocker commit image-id image-name:tag "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将修改后的容器重新打包成一个镜像")]),s._v("\ndocker tag image-id image-name:tag "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对镜像重命名")]),s._v("\ndocker save image-name:tag "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ~/docker_package.tar "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像打包成tar包")]),s._v("\ndocker load -i docker_package.tar "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入镜像")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -it --rm --net"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"host"')]),s._v(" --name demo-jdk openjdk:8-alpine\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" Dockerfile")]),s._v(" "),t("div",{staticClass:"language-docker line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-docker"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" openjdk:8-alpine")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MAINTAINER")]),s._v(" nfe-w <nfe-w@outlook.com>")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# https://blog.csdn.net/qq32933432/article/details/120944205")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# volume只是指定了一个目录，用以在用户忘记启动时指定-v参数也可以保证容器的正常运行。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 比如mysql，不能说用户启动时没有指定-v，然后删了容器，就把mysql的数据文件都删了，那样生产上是会出大事故的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 所以mysql的dockerfile里面就需要配置volume")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这样即使用户没有指定-v，容器被删后也不会导致数据文件都不在了，还是可以恢复的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /var/lib/docker/volumes/{容器ID}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 【如果-v和volume指定了同一个位置，会发生什么事呢？】会以-v设定的目录为准，其实volume指令的设定的目的就是为了避免用户忘记指定-v的时候导致的数据丢失，那么如果用户指定了-v，自然而然就不需要volume指定的位置了")]),s._v("\nVOLUMN /tmp # 声明容器中/tmp为匿名卷\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制代码")]),s._v("\nADD/COPY . /root/app/\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置容器启动后的默认运行目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /root/app/")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行命令，安装依赖")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# RUN 命令可以有多个，可以用 && 连接多个命令来减少层级。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" mkdir /root/logs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n && cd /root/logs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n && touch 1.log "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n && rm -rf 1.log")]),s._v('\n && echo "https://mirror.tuna.tsinghua.edu.cn/alpine/v3.4/main" >> /etc/apk/repositories \\\n && echo "https://mirror.tuna.tsinghua.edu.cn/alpine/v3.4/community" >> /etc/apk/repositories \\\n && apk --update add curl bash ttf-dejavu \\\n && rm -rf /var/cache/apk/*\n \n'),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置环境变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" WORK_PATH=/root/app")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暴露端口，仅仅是一个标识，告诉使用者需要暴露哪个端口，也可用于随机映射端口时使用")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 8080")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只能有一个ENTRYPOINT，当指定多个时，只有最后一个生效。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 是容器启动后执行的命令，不可被docker run命令后面的参数覆盖")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一般搭配 CMD 使用，一个定参一个变参")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" <command>")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只能有一个CMD，当指定多个时，只有最后一个生效。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 是容器启动后执行的命令，可被docker run命令后面的命令行参数覆盖")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果还需要运行其他命令可以用 && 连接，也可以写成一个shell脚本去执行。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如 CMD cd /app && ./start.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-jar"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx.jar"')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br")])]),t("h2",{attrs:{id:"减小-docker-镜像大小的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#减小-docker-镜像大小的方法"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"http://www.python88.com/topic/73118",target:"_blank",rel:"noopener noreferrer"}},[s._v("减小 Docker 镜像大小的方法"),t("OutboundLink")],1)]),s._v(" "),t("ol",[t("li",[s._v("添加"),t("code",[s._v(".dockerignore")]),s._v(" 文件")]),s._v(" "),t("li",[s._v("创建"),t("code",[s._v("Dockerfile")]),s._v(" 时使用"),t("code",[s._v("FROM xxx-alpine")]),s._v(" 的base镜像")])]),s._v(" "),t("blockquote",[t("p",[s._v("Alpine Linux是一个基于BusyBox和Musl Libc的Linux发行版，其最大的优势就是小。一个纯的基础Alpine Docker镜像在压缩后仅有2.67MB。\nAlpine的一个缺点是，其使用了Musl Libc作为传统的glibc的替代，编译软件的时候可能会遇到一些不可预知的问题，这一点会导致我们耗费不少不必要的时间。")])]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[s._v("只安装最少的依赖")])]),s._v(" "),t("blockquote",[t("p",[s._v("以apt为例，apt-get在安装软件的时候，可以指定一个选项："),t("code",[s._v("--no-install-recommends")]),s._v("，指定这个参数后，有一些非必须的依赖将不会被一起安装")]),s._v(" "),t("p",[t("code",[s._v("apt-get install --no-install-recommends wget ca-certificates")])])]),s._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[t("p",[s._v("尽量将中间依赖的安装与卸载操作放在一个步骤中")]),s._v(" "),t("blockquote",[t("p",[s._v("docker镜像是一个由“层”来堆叠起来的“千层饼”，我们可以使用"),t("code",[s._v("docker history")]),s._v("这条命令来查看任意一个镜像是由哪些层组成的，以及每一层的大小：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2021/12/21/EVIbxpdHfyCNumQ.png",alt:"img"}})]),s._v(" "),t("p",[s._v("对于Dockerfile来说，这些层的数据都将会被保存在镜像中，即使后一层删除了前一层内保存的文件。")])]),s._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[t("p",[s._v("多阶段编译")])]),s._v(" "),t("li",[t("p",[s._v("使用slim版本的镜像")])])])])]),s._v(" "),t("h2",{attrs:{id:"目录挂载的几种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录挂载的几种方式"}},[s._v("#")]),s._v(" 目录挂载的几种方式")]),s._v(" "),t("ol",[t("li",[t("p",[t("code",[s._v("bind mount")]),s._v(" 直接把宿主机目录映射到容器内，适合挂代码目录和配置文件。可挂到多个容器上。用法："),t("code",[s._v("-v ~/code:/app")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("volume")]),s._v(" 由容器创建和管理，创建在宿主机，所以删除容器不会丢失，官方推荐，更高效，Linux 文件系统，适合存储数据库数据。可挂到多个容器上。用法："),t("code",[s._v("-v db-data:/app")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("tmpfs mount")]),s._v(" 适合存储临时文件，存宿主机内存中。不可多容器共享，不常用。")])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2021/12/21/1R3zZSrFIQmWTvN.png",alt:"image.png"}})]),s._v(" "),t("h2",{attrs:{id:"docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" Docker-Compose")]),s._v(" "),t("h3",{attrs:{id:"docker-compose-yml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-yml"}},[s._v("#")]),s._v(" docker-compose.yml")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.7"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ./\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 80"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/app\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" TZ=Asia/Shanghai "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器默认时间不是北京时间，增加 TZ=Asia/Shanghai 可以改为北京时间")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("5.0.13\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/data\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" TZ=Asia/Shanghai\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("h3",{attrs:{id:"相关命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关命令"}},[s._v("#")]),s._v(" 相关命令")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker-compose up -d "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在后台运行只需要加一个 -d 参数")]),s._v("\ndocker-compose "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看运行状态")]),s._v("\ndocker-compose stop "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止运行")]),s._v("\ndocker-compose restart "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启")]),s._v("\ndocker-compose restart service-name "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启单个服务")]),s._v("\ndocker-compose "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" service-name "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入容器命令行")]),s._v("\ndocker-compose logs "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("service-name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器运行log")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"linux-下解决-docker-端口映射到宿主机后外网无法访问的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-下解决-docker-端口映射到宿主机后外网无法访问的问题"}},[s._v("#")]),s._v(" linux 下解决 docker 端口映射到宿主机后外网无法访问的问题")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("sysctl net.ipv4.ip_forward "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看是否允许转发 0-不允许转发  1-允许转发")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 解决办法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/sysctl.conf\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /usr/lib/sysctl.d/00-system.conf\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加如下代码：")]),s._v("\nnet.ipv4.ip_forward"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#0-不允许转发  1-允许转发  默认0")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启network服务")]),s._v("\nsystemctl restart network\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" network-manager restart\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看是否修改成功")]),s._v("\nsysctl net.ipv4.ip_forward "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果返回为“net.ipv4.ip_forward = 1”则表示成功了")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h2",{attrs:{id:"docker-网络模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-网络模式"}},[s._v("#")]),s._v(" docker 网络模式")]),s._v(" "),t("blockquote",[t("p",[s._v("Docker容器运行的时候有"),t("code",[s._v("host")]),s._v("、"),t("code",[s._v("bridge")]),s._v("、"),t("code",[s._v("none")]),s._v("三种网络可供配置。默认是"),t("code",[s._v("bridge")]),s._v("，即桥接网络，以桥接模式连接到宿主机；"),t("code",[s._v("host")]),s._v("是宿主网络，即与宿主机共用网络；"),t("code",[s._v("none")]),s._v("则表示无网络，容器将无法联网。")]),s._v(" "),t("p",[s._v("当容器使用"),t("code",[s._v("host")]),s._v("网络时，容器与宿主共用网络，这样就能在容器中访问宿主机网络，那么容器的"),t("code",[s._v("localhost")]),s._v("就是宿主机的"),t("code",[s._v("localhost")]),s._v("。")]),s._v(" "),t("p",[s._v("在docker中使用"),t("code",[s._v("--network host")]),s._v("来为容器配置"),t("code",[s._v("host")]),s._v("网络：")]),s._v(" "),t("p",[s._v("docker run -d --name nginx --network host nginx")]),s._v(" "),t("p",[s._v("上面的命令中，没有必要像前面一样使用"),t("code",[s._v("-p 80:80 -p 443:443")]),s._v("来映射端口，是因为本身与宿主机共用了网络，容器中暴露端口等同于宿主机暴露端口。")]),s._v(" "),t("p",[s._v("使用host网络不需要修改"),t("code",[s._v("nginx.conf")]),s._v("，仍然可以使用"),t("code",[s._v("localhost")]),s._v("，因而通用性比上一种方法好。但是，由于"),t("code",[s._v("host")]),s._v("网络没有"),t("code",[s._v("bridge")]),s._v("网络的隔离性好，使用"),t("code",[s._v("host")]),s._v("网络安全性不如"),t("code",[s._v("bridge")]),s._v("高。")]),s._v(" "),t("p",[s._v("两种方法各有优劣，使用宿主机IP隔离性更好，但通用性不好；使用host网络，通用性好，但带来了暴露宿主网络的风险")])])])}),[],!1,null,null,null);a.default=e.exports}}]);